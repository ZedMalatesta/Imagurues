"use strict";function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}();!function(t){var e=window.onScrollFunctions=[];t(window).on("scroll",function(){e.forEach(function(t){t()})})}(jQuery),function(t){window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t,e){window.setTimeout(t,1e3/60)},window.animationFrames=[];!function t(){animationFrames.forEach(function(t){"function"==typeof t&&t()}),requestAnimationFrame(t)}()}(jQuery);var menuIcon=document.querySelector(".menu-icon"),sandwich=document.querySelector(".sandwich"),menu=document.querySelector(".menu"),item=menu.querySelectorAll(".menu-item");menuIcon.addEventListener("click",function(){sandwich.classList.toggle("active"),menu.classList.toggle("active"),item.forEach(function(t){t.classList.toggle("animated"),t.classList.toggle("fadeInRight")})});for(var i=0;i<item.length;i++)item[i].addEventListener("click",function(){sandwich.classList.toggle("active"),menu.classList.toggle("active")});if(function(t){var e=!1,n=t('a[href ^= "#"]'),o=n.parent("li"),i=[];n.each(function(){var e,n=t(this).attr("href").slice(1);e=t("section#"+n),i=0===i.length?e:i.add(e)});var s=function(e){o.removeClass("active"),n.filter(function(){return t(this).attr("href")===e}).parent().addClass("active")},r=function(){if(!e){var n=t(window).scrollTop(),o=window.innerHeight;i.each(function(){var e=t(this).offset().top,i=t(this).outerHeight();if(e<n+o/3&&e+i>n+o/3){var r=t(this).attr("id");t(this).attr("id",""),window.location.hash="#"+r,t(this).attr("id",r),s("#"+r)}})}};o.on("click",function(){s(t(this).find('a[href ^= "#"]').attr("href")),e=!0,setTimeout(function(){e=!1},500)}),animationFrames.push(r),r()}(jQuery),0!==document.querySelectorAll(".tabs").length){var firstIcon,firstActiveTabButton;!function(){firstIcon=document.querySelector(".tabcontent svg");var t=document.querySelectorAll(".tab-button");(firstActiveTabButton=document.querySelector(".tab-button")).classList.add("active"),firstActiveTabButton.dispatchEvent(new Event("click")),document.querySelector(".tabcontent").style.display="flex",new Vivus(firstIcon,{duration:200,type:"oneByOne",animTimingFunction:Vivus.LINEAR},function(t){t.el.classList.add("finished")});for(var e=0,n=t.length;e<n;e++)t[e].addEventListener("click",function(e){for(var n=this.dataset.id,o=document.querySelector('.tabcontent[data-id="'+n+'"]'),i=document.querySelectorAll(".tabcontent"),s=o.querySelector("svg"),r=0,a=i.length;r<a;r++)i[r].style.display="none",i[r].querySelector("svg").classList.remove("finished");o.style.display="flex",new Vivus(s,{duration:200,type:"oneByOne",animTimingFunction:Vivus.LINEAR},function(t){t.el.classList.add("finished")});for(var c=0,l=t.length;c<l;c++)t[c].classList.remove("active");this.classList.add("active")})}()}!function(t,e){if(0!==t(".our-team").length){var n=e("#team-svg"),o=n.selectAll(".team-member"),i=n.selectAll(".team-member .drawing"),s=t(".about-item"),r=function(){i.forEach(function(t){t.removeClass("active")})},a=function(t){s.removeClass("active"),s.filter('[data-name="'+t+'"]').addClass("active")};o.forEach(function(t){var e=t.select(".area"),n=t.select(".drawing");e.hover(function(){this.addClass("hover"),n.addClass("ready")},function(){this.removeClass("hover"),n.removeClass("ready")});var o=function(){r(),n.addClass("active"),a(t.attr("data-name"))};e.click(o),t.hasClass("active")&&o()}),t(".contact-artem").on("click",function(){t(this).addClass("removed"),t(this).siblings(".contacts").addClass("active"),t(this).off("click")})}}(jQuery,Snap);var items=document.querySelectorAll(".process-list li");if(items.forEach(function(t){t.addEventListener("mouseover",function(t){document.querySelectorAll(".process-list li").forEach(function(t){t.classList.remove("active")}),t.target.classList.add("active")},!1)}),"undefined"!==document.querySelector(".portfolio__list"))for(var _items=document.querySelectorAll(".portfolio__item"),_i4=0;_i4<_items.length;_i4++)""==_items[_i4].style.backgroundColor&&(_items[_i4].querySelector("p").style.color="#000000");!function(t){var e=t(".parallax");animationFrames.push(function(){e.each(function(){t(this).css({backgroundPosition:"50% "+.3*t(window).scrollTop()+"px"})})})}(jQuery);var contactsButton=document.getElementById("contacts-btn");contactsButton.addEventListener("mouseover",function(){window.dispatchEvent(new CustomEvent("hireus",{}))}),contactsButton.addEventListener("touchstart",function(){window.dispatchEvent(new CustomEvent("hireus",{}))}),contactsButton.addEventListener("mouseleave",function(){window.dispatchEvent(new CustomEvent("unhireus",{}))}),contactsButton.addEventListener("touchend",function(){window.dispatchEvent(new CustomEvent("unhireus",{}))});for(var mandrillKey="Rptt_9PqlE-4w0i1gEtFxA",formButtons=document.querySelectorAll(".form-btn"),closeBtn=document.querySelector(".form__close"),contactForm=document.querySelector(".form"),answer=document.querySelector(".form-answer"),answerText=answer.querySelector("h2"),_i5=0;_i5<formButtons.length;_i5++)formButtons[_i5].addEventListener("click",function(t){t.stopImmediatePropagation(),contactForm.classList.add("visible"),contactForm.addEventListener("blur",function(){contactForm.classList.remove("visible")})});closeBtn.addEventListener("click",function(t){t.stopImmediatePropagation(),contactForm.classList.remove("visible")}),answer.querySelector(".form__close").addEventListener("click",function(){answer.classList.remove("visible")});var textarea=$(contactForm).find(".textarea-container textarea");textarea.on("focus",function(){$(this).parents(".textarea-container").addClass("focus")}),textarea.blur(function(){$(this).parents(".textarea-container").removeClass("focus")}),$(contactForm).on("submit",function(t){function e(t){o.addClass("preload");var e="success"===t?"Thank you! We will contact you very soon!":"Sorry! Something went wrong ...";contactForm.classList.remove("visible"),answerText.innerHTML=e,answer.classList.add("visible")}function n(t,e,n){$.ajax({type:"POST",url:"https://mandrillapp.com/api/1.0/messages/send.json",data:t,dataType:"json",success:function(t){null===t[0].reject_reason?"function"==typeof e&&e():"function"==typeof n&&n()},error:function(t){"function"==typeof n&&n()}})}t.preventDefault();var o=$(this).find('button[type="submit"]'),i=this.elements.name.value,s=this.elements.company.value,r=this.elements.email.value,a=this.elements.phone.value,c=this.elements.what.value;o.addClass("preload");var l=JSON.stringify({key:mandrillKey,message:{html:'\t\t\t\t<h2 style="font-size: 20px; color: #444;">Dear '+i+'</h2>\t\t\t\t<p style="margin-bottom: 5px; font-size: 16px;">We received your message. We will answer you asap</p>\t\t\t\t<p style="margin-top:10px; font-size: 14px; margin-bottom: 20px; font-style: italic">It won\'t be long! yeh, yeh, yeh :)</p>\t\t\t\t<p style="font-size: 14px; color: #888;">Best regards. IT-services team, imaguru.co</p>\t\t\t',subject:"IT-services order",from_email:"it@imaguru.co",from_name:"IT-services, imaguru.co",to:[{email:r,name:i,type:"to"}],metadata:{website:"it.service.co"}}});n(JSON.stringify({key:mandrillKey,message:{html:'\t\t\t\t<h2 style="font-size: 20px; color: #444;">New order from it.imaguru.co</h2>\t\t\t\t<p style="margin-bottom: 10px; font-size: 16px;"><strong>Name: </strong>'+i+'</p>\t\t\t\t<p style="margin-bottom: 10px; font-size: 16px;"><strong>Company: </strong>'+s+'</p>\t\t\t\t<p style="margin-bottom: 10px; font-size: 16px;"><strong>Email: </strong>'+r+'</p>\t\t\t\t<p style="margin-bottom: 10px; font-size: 16px;"><strong>Phone: </strong>'+a+'</p>\t\t\t\t<p style="margin-bottom: 20px; font-size: 16px;"><strong>Wishes: </strong>'+c+'</p>\t\t\t\t<p style="font-size: 12px; color: #888;">Best regards. '+i+", "+s+"</p>\t\t\t",subject:"IT-services order",from_email:"it@imaguru.co",from_name:"IT-services, imaguru.co",to:[{email:"it@imaguru.co",name:"IT department",type:"to"}],metadata:{website:"it.service.co"}}}),function(){e("success"),n(l)},function(){e("error")})}),function(t){var e=t(".what .tab-button"),n=e.filter(".active"),o=e.parents(".tab-buttons"),i=t(".what .tab-pointer");if(e.length&&i.length){e.on("click",function(e){var n={x:0,y:0};i.hasClass(".visible")||i.addClass("visible"),n.y=t(this).position().top+t(this).height()/2-i.height()/2;var s={x:0,y:0};0!==o.length&&(s.y=o.position().top),n.y+=s.y;var r,a=t(this).clone().addClass("active").css("display","none");t(this).after(a),r=a.css("color"),a.remove(),i.css({transform:"translateY("+n.y+"px)",fill:r})}),0!==n.length&&setTimeout(function(){n.trigger("click")},101)}}(jQuery),function(t){var e,n=$(".main-sidebar"),o=function(){$(window).scrollTop()>e/2?n.addClass("visible"):n.removeClass("visible")};o();var i=function(){e=window.innerHeight};i(),animationFrames.push(o),$(window).on("resize",function(){i()});var s={toggler:null,menu:null,menuState:!1,open:function(){var t=this;t.toggler.addClass("active"),t.menu.addClass("active"),t.menuState=!0},close:function(){var t=this;t.toggler.removeClass("active"),t.menu.removeClass("active"),t.menuState=!1},bindEvents:function(){var t=this;t.toggler.on("click",function(e){e.stopPropagation(),t.menuState?t.close():t.open()})},init:function(t,e){var n=this;n.toggler=$(t),n.menu=$(e),n.menu.hasClass("active")?n.menuState=!0:n.menuState=!1,n.bindEvents()}};s.init(".side-menu-button",".side-nav");var r=[];r.push(s),$(document).on("click",function(t){r.forEach(function(t,e){t.close()})})}($),function(t){var e={$:"",show:function(){this.$.addClass("visible")},hide:function(){this.$.removeClass("visible")},remove:function(t){t.onFrame=function(){},t.$.remove()},onFrame:function(e){var e;t(window).scrollTop()>e.openAfter?e.show():e.hide()},bindEvents:function(){var t=this;t.$.find(".close").click(function(){t.remove(t)}),animationFrames.push(function(){t.onFrame(t)})},init:function(e,n){var o=this;o.$=t(e),o.openAfter=n,o.bindEvents()}},n=t("#how").offset().top+t("#how").outerHeight()-t(window).outerHeight();e.init(".order-panel",n)}(jQuery),smoothScroll.init({easing:"easeOutQuad",speed:500}),function(t,e){var n=function(t,n,o,i,s,r,a,c){t.animations=t.animations||[],t.animations[n]&&t.animations[n].stop(),t.animations[n]=e.animate(o,i,a,s,r,c)},o=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;_classCallCheck(this,t),this.x=e,this.y=n}return _createClass(t,[{key:"add",value:function(t){this.x+=t.x,this.y+=t.y}},{key:"copy",value:function(){return new t(this.x,this.y)}}]),t}(),i=function(){function n(i){var s=this;_classCallCheck(this,n),this.paper=e(i),this.paper.attr({width:320,height:320}),this.$=t(i),this.objects=[],this.mouse=new o,this.bindEvents(),animationFrames.push(function(){s.tick()})}return _createClass(n,[{key:"addObject",value:function(t,e){e.world=this,this.objects.push(new t(e))}},{key:"tick",value:function(){this.update(),this.draw()}},{key:"update",value:function(){this.objects.forEach(function(t){t.update()})}},{key:"draw",value:function(){this.objects.forEach(function(t){t.draw()})}},{key:"bindEvents",value:function(){var e=this;t(".contacts").on("mousemove touchmove",function(t){var n=new o;t.originalEvent.touches?(n.x=t.originalEvent.touches[0].pageX,n.y=t.originalEvent.touches[0].pageY):(n.x=t.pageX,n.y=t.pageY);var i=[n.x-e.$.offset().left,n.y-e.$.offset().top];e.mouse.x=i[0],e.mouse.y=i[1]})}}]),n}(),s=function(){function t(e){_classCallCheck(this,t),this.loc=e.loc||new o,this.home=this.loc.copy(),this.speed=e.speed||new o,this.world=e.world}return _createClass(t,[{key:"update",value:function(){this.loc.add(this.speed)}}]),t}(),r=function(t){function e(t){_classCallCheck(this,e);var n=_possibleConstructorReturn(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return t.ringConfig.eye=t.appleConfig.eye=n,n.parts=[new a(t.ringConfig),new c(t.appleConfig)],n}return _inherits(e,t),_createClass(e,[{key:"update",value:function(){this.parts.forEach(function(t){t.update()})}},{key:"draw",value:function(){this.parts.forEach(function(t){t.draw()})}}]),e}(s),a=function(t){function e(t){_classCallCheck(this,e);var n=_possibleConstructorReturn(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.eye=t.eye,n.world=n.eye.world,n.paper=n.eye.world.paper,n.create(t),n}return _inherits(e,t),_createClass(e,[{key:"create",value:function(t){this.ring=this.paper.circle(this.eye.loc.x,this.eye.loc.y,t.r).attr({fill:"transparent",stroke:"#fff",strokeWidth:4})}},{key:"update",value:function(){}},{key:"draw",value:function(){}}]),e}(s),c=function(t){function e(t){_classCallCheck(this,e);var n=_possibleConstructorReturn(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.eye=t.eye,n.world=n.eye.world,n.paper=n.eye.world.paper,n.offset=new o(0,0),n.circleTransformed=new o(0,0),n.create(t),n}return _inherits(e,t),_createClass(e,[{key:"create",value:function(t){var e=this;this.circle=this.paper.circle(this.eye.loc.x,this.eye.loc.y,t.r).attr({fill:"#fff",strokeWidth:0}).drag(function(t,n,o,i){e.circleTransformed={x:t+e.offset.x,y:n+e.offset.y}},function(){e.circle.animations=e.circle.animations||[],e.circle.animations["return-to-home-x"]&&e.circle.animations["return-to-home-x"].stop(),e.circle.animations["return-to-home-y"]&&e.circle.animations["return-to-home-y"].stop()},function(t,n){e.offset.x=e.circleTransformed.x,e.offset.y=e.circleTransformed.y,e.returnToStart()})}},{key:"returnToStart",value:function(){var t=this;n(this.circle,"return-to-home-x",this.circleTransformed.x,0,1e3,mina.elastic,function(e){t.circleTransformed.x=t.offset.x=e}),n(this.circle,"return-to-home-y",this.circleTransformed.y,0,1e3,mina.elastic,function(e){t.circleTransformed.y=t.offset.y=e})}},{key:"update",value:function(){if(this.world.mouse.x&&this.world.mouse.y){var t=(this.world.mouse.x-this.eye.home.x)/20,e=(this.world.mouse.y-this.eye.home.y)/20;Math.abs(t)>22&&0!==t&&(t=22*t/Math.abs(t)),Math.abs(e)>22&&0!==e&&(e=22*e/Math.abs(e)),this.loc.x=this.eye.loc.x+t,this.loc.y=this.eye.loc.y+e}}},{key:"draw",value:function(){this.circle.attr({cx:this.loc.x||this.eye.loc.x,cy:this.loc.y||this.eye.loc.y}).transform("t"+(this.circleTransformed.x||0)+","+(this.circleTransformed.y||0))}}]),e}(s),l=function(e){function i(t){_classCallCheck(this,i);var e=_possibleConstructorReturn(this,(i.__proto__||Object.getPrototypeOf(i)).call(this,t));return e.points=t.points,e.paper=e.world.paper,e.topArc={start:new o(-40,0),finish:new o(40,0),rx:200,ry:200},e.topArc.ryClosed=e.topArc.ry,e.topArc.ryOpened=0,e.bottomArc={start:new o(40,0),finish:new o(-40,0),rx:40,ry:0},e.bottomArc.ryClosed=e.bottomArc.ry,e.bottomArc.ryOpened=50,e.create(t),e.bindEvents(),e}return _inherits(i,e),_createClass(i,[{key:"create",value:function(t){this.path=this.paper.path("").attr({strokeWidth:3,stroke:"#fff",fill:"brown"})}},{key:"update",value:function(){}},{key:"draw",value:function(){var t="M "+(this.loc.x+this.topArc.start.x)+","+(this.loc.y+this.bottomArc.start.y);t+="A"+this.topArc.rx+","+this.topArc.ry+",0,0,1,"+(this.loc.x+this.topArc.finish.x)+","+(this.loc.y+this.topArc.finish.y),t+="A"+this.bottomArc.rx+","+this.bottomArc.ry+",0,0,1,"+(this.loc.x+this.bottomArc.finish.x)+","+(this.loc.y+this.bottomArc.finish.y),this.path.attr({d:t})}},{key:"funny",value:function(){var t=this;n(this.topArc,"mouth-animation",this.topArc.ry,this.topArc.ryOpened,200,mina.easeinout,function(e){t.topArc.ry=e}),n(this.bottomArc,"mouth-animation",this.bottomArc.ry,this.bottomArc.ryOpened,300,mina.easeinout,function(e){t.bottomArc.ry=e})}},{key:"sad",value:function(){var t=this;n(this.topArc,"mouth-animation",this.topArc.ry,this.topArc.ryClosed,200,mina.easeinout,function(e){t.topArc.ry=e}),n(this.bottomArc,"mouth-animation",this.bottomArc.ry,this.bottomArc.ryClosed,300,mina.easeinout,function(e){t.bottomArc.ry=e})}},{key:"bindEvents",value:function(){var e=this;t(window).on("hireus",function(){e.funny()}),t(window).on("unhireus",function(){e.sad()})}}]),i}(s),u=new i("#smile"),f={r:45},h={r:18},m={loc:new o(80,100),ringConfig:f,appleConfig:h},d={loc:new o(240,100),ringConfig:f,appleConfig:h},p={loc:new o(160,200)};u.addObject(r,m),u.addObject(r,d),u.addObject(l,p)}($,Snap);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
